name: CVI Calculation and Dashboard Update

on:
  schedule:
    - cron: '5 * * * *'   # hourly at hh:05 UTC
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: cvi-scrape
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      TZ: UTC
      CVI_EXCLUDE: ""
      CVI_INCLUDE: ""
      COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      TO_EMAIL:   ${{ secrets.TO_EMAIL }}
      NOTIFY_ON: "strong"
      NOTIFY_MIN_STRENGTH: "0.5"
      ALWAYS_TICK: "1"               # guarantee a new dot every run
      # EMA_CROSS_THRESHOLD: "0.02"  # optional

    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Bootstrap manifest on first run
        run: |
          mkdir -p docs
          [ -f docs/cvi_manifest.json ] || echo '{"assets":[]}' > docs/cvi_manifest.json
          ls -la docs || true

      - name: Decide CoinGecko mode based on trigger
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            echo "COINGECKO_MODE=on" >> "$GITHUB_ENV"
            echo "CoinGecko: ON (scheduled refresh)"
          else
            echo "COINGECKO_MODE=off" >> "$GITHUB_ENV"
            echo "CoinGecko: OFF (push/dispatch)"
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node dependencies
        run: npm install --no-audit --no-fund

      - name: Build CVI data for all assets
        run: node scripts/fetchOptionsData.js

      - name: Generate ERI + trade recommendations
        run: node scripts/strategyEngine.js

      # ---------- Prediction steps (Python) ----------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas scikit-learn

      - name: Build historical CSVs (backfill)
        run: python scripts/backfill.py

      - name: Train + write predictions
        run: python scripts/train.py
      # ----------------------------------------------

      - name: Send email alerts (deduped)
        run: node scripts/notifyEmail.js

      - name: Show changes (debug)
        run: |
          echo "Git status:"
          git status
          echo "Diff (stat) in docs/:"
          git diff --name-status -- docs || true
          echo "Manifest head:"
          head -n 60 docs/cvi_manifest.json || true

      - name: Commit & push docs (always push)
        env:
          BRANCH: main
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add -A docs

          # Ensure a diff so Pages rebuilds even if data identical
          if git diff --cached --quiet; then
            mkdir -p docs
            echo "{\"last_run\":\"$(date -u +%FT%TZ)\",\"run_id\":\"${GITHUB_RUN_ID}\"}" > docs/.heartbeat.json
            git add docs/.heartbeat.json
          fi

          git commit -m "CVI tick: update artifacts (or heartbeat)" --allow-empty
          git push origin HEAD:$BRANCH
          echo "Push complete."

      - name: Trigger GitHub Pages rebuild (backstop)
        run: |
          curl -sSL -X POST \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/pages/builds
