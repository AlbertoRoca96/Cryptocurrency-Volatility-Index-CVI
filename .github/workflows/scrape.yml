name: CVI Calculation and Dashboard Update

on:
  schedule:
    - cron: '*/30 * * * *'   # every 30 minutes
  push:
    branches: [ main ]

permissions:
  contents: write

concurrency:
  group: cvi-scrape
  cancel-in-progress: true

jobs:
  fetch-options-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Keep your first-run manifest bootstrap
      - name: Bootstrap manifest on first run
        run: |
          mkdir -p docs
          [ -f docs/cvi_manifest.json ] || echo '{"assets":[]}' > docs/cvi_manifest.json

      # 1) Set up Node WITHOUT cache so we can generate a lockfile if missing
      - name: Set up Node.js (no cache, first-run friendly)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 2) If there's no lockfile yet, create one from package.json (no installs)
      - name: Create package-lock.json if missing
        if: ${{ hashFiles('package-lock.json') == '' }}
        run: npm install --package-lock-only --ignore-scripts --no-audit --no-fund

      # 3) Re-run setup-node WITH cache now that a lockfile exists
      - name: Set up Node.js (with cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      # 4) Install deps reproducibly if lockfile exists; fall back otherwise
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --ignore-scripts --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      - name: Build CVI data for all assets
        run: node scripts/fetchOptionsData.js

      - name: Commit and push changes (only if there are changes)
        uses: EndBug/add-and-commit@v9
        with:
          add: docs/**
          message: "Update CVI (multi-asset): smile + timeseries + manifest + signals"
          default_author: github_actions
