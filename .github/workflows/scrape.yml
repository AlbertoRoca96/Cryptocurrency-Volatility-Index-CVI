name: CVI Calculation and Dashboard Update

on:
  schedule:
    - cron: '*/15 * * * *'   # frequent runs (Deribit + cached/series-based fallbacks)
    - cron: '5 * * * *'      # once per hour, allow CoinGecko
  push:
    branches: [ main ]

permissions:
  contents: write

concurrency:
  group: cvi-scrape
  cancel-in-progress: true

jobs:
  fetch-options-data:
    runs-on: ubuntu-latest
    env:
      CVI_EXCLUDE: ""              # no skip by default
      CVI_INCLUDE: ""              # optional include list
      COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      # Twilio / Email (store these in GitHub Secrets):
      EMAIL_USER: ${{ secrets.EMAIL_USER }}     # Your email
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}     # App password
      TO_EMAIL: ${{ secrets.TO_EMAIL }}         # Recipient email
      # Optional alert tuning
      NOTIFY_ON:          strong                            # strong | non-hold | all
      NOTIFY_MIN_STRENGTH: "0.5"                            # used by strong mode
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull the latest changes from the remote main branch
        run: git pull origin main

      - name: Bootstrap manifest on first run
        run: |
          mkdir -p docs
          [ -f docs/cvi_manifest.json ] || echo '{"assets":[]}' > docs/cvi_manifest.json

      - name: Decide CoinGecko mode based on schedule
        run: |
          # If this run was triggered by the hourly cron ('5 * * * *'), enable CoinGecko.
          if [ "${{ github.event_name }}" = "schedule" ] && [ "${{ github.event.schedule }}" = "5 * * * *" ]; then
            echo "COINGECKO_MODE=on" >> "$GITHUB_ENV"
            echo "CoinGecko: ON (hourly refresh)"
          else
            echo "COINGECKO_MODE=off" >> "$GITHUB_ENV"
            echo "CoinGecko: OFF (15-min run uses Deribit + fallbacks)"
          fi

      - name: Set up Node.js (no cache, first-run friendly)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install --no-audit --no-fund

      - name: Build CVI data for all assets
        run: node scripts/fetchOptionsData.js

      - name: Generate ERI + trade recommendations
        run: node scripts/strategyEngine.js

      - name: Send Email alerts (deduped)
        run: node scripts/notifyEmail.js

      - name: Commit and push changes (only if there are changes)
        uses: EndBug/add-and-commit@v9
        with:
          add: docs/**
          message: "Update CVI + ERI + Alerts: smiles, timeseries, manifest, signals, risk index, orders, notify_state"
          default_author: github_actions
