name: CVI Calculation and Dashboard Update

on:
  schedule:
    - cron: '*/15 * * * *'   # every 15 min (UTC)
    - cron: '5 * * * *'      # hourly CoinGecko (UTC hh:05)
  push:
    branches: [ main ]

permissions:
  contents: write

concurrency:
  group: cvi-scrape
  cancel-in-progress: true

jobs:
  fetch-options-data:
    runs-on: ubuntu-latest
    env:
      CVI_EXCLUDE: ""
      CVI_INCLUDE: ""
      COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      TO_EMAIL:   ${{ secrets.TO_EMAIL }}
      NOTIFY_ON: "strong"
      NOTIFY_MIN_STRENGTH: "0.5"
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0        # allow committing & pushing

      - name: Bootstrap manifest on first run
        run: |
          mkdir -p docs
          [ -f docs/cvi_manifest.json ] || echo '{"assets":[]}' > docs/cvi_manifest.json
          echo "Initial docs listing:"
          ls -la docs || true

      - name: Decide CoinGecko mode based on schedule
        run: |
          if [ "${{ github.event_name }}" = "schedule" ] && [ "${{ github.event.schedule }}" = "5 * * * *" ]; then
            echo "COINGECKO_MODE=on" >> "$GITHUB_ENV"
            echo "CoinGecko: ON (hourly refresh)"
          else
            echo "COINGECKO_MODE=off" >> "$GITHUB_ENV"
            echo "CoinGecko: OFF (15-min run uses Deribit + fallbacks)"
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Build CVI data for all assets
        run: node scripts/fetchOptionsData.js

      - name: Generate ERI + trade recommendations
        run: node scripts/strategyEngine.js

      - name: Send Email alerts (deduped)
        run: node scripts/notifyEmail.js

      - name: Show changes (debug)
        run: |
          echo "Git status:"
          git status
          echo "Diff (stat) in docs/:"
          git diff --name-status -- docs || true
          echo "Manifest head:"
          head -n 60 docs/cvi_manifest.json || true

      - name: Commit & push docs if changed (plain git)
        env:
          BRANCH: main
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage only the site artifacts
          git add -A docs

          # If nothing staged, bail noisily
          if git diff --cached --quiet; then
            echo "No changes staged in docs/. Nothing to commit."
            exit 0
          fi

          echo "Committing changes..."
          git commit -m "Update CVI + ERI + Alerts: smiles, timeseries, manifest, signals, risk, orders, notify_state"

          echo "Pushing to $BRANCH..."
          git push origin HEAD:$BRANCH

          echo "Push complete."
